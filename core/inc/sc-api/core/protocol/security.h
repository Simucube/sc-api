#ifndef SC_API_PROTOCOL_SECURITY_H_
#define SC_API_PROTOCOL_SECURITY_H_

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

/** Different types*/
typedef enum SC_API_PROTOCOL_SecurityMethod_e {
    /** No public key available */
    SC_API_PROTOCOL_SECURITY_METHOD_NONE              = 0,

    /** Use ECDH with x25519 curve to exchange key and then AES128_GCM for symmetric encryption
     *
     * Elliptic-curve Diffie-Hellman is used to negotiate encryption key that API user will use to encrypt
     * packet content. AES128-GCM is used to encrypt the packet data itself after key exchange.
     *
     * Key signing is with Ed25519
     */
    SC_API_PROTOCOL_SECURITY_METHOD_X25519_AES128_GCM = 1,
} SC_API_PROTOCOL_SecurityMethod_t;

/** Ed25519 signing public key used by SC-API
 *
 *  This can be used to verify that public keys in API are actually generated by Simucube
 */
static const uint8_t SC_API_PROTOCOL_ed25519_signature_public_key[] = {
    0x1a, 0x4a, 0x34, 0xc7, 0xd8, 0xc5, 0x77, 0x85, 0xee, 0x16, 0xcf, 0x93, 0x99, 0xd8, 0x41, 0xba,
    0xbc, 0x2b, 0x9,  0x9,  0x1,  0x28, 0xb6, 0x0,  0xda, 0x89, 0x71, 0x16, 0xf4, 0xcb, 0x5c, 0x66};

#ifdef __cplusplus
}
#endif

#endif  // SC_API_PROTOCOL_SECURITY_H_
